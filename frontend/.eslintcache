[{"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/index.js":"1","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/App.js":"2","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/configureStore.js":"3","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/Homepage.js":"4","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/NavBar.js":"5","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/auth/LoginPage.js":"6","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/auth/ProtectedRoute.js":"7","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/auth/SignUpPage.js":"8","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/SplashPage.js":"9","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/reducers/auth.js":"10","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/actions/auth.js":"11","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/ContentCredits.js":"12","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/Account.js":"13","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/StockMarket.js":"14","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/Banking.js":"15","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/reducers/bankInfo.js":"16","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/actions/bankInfo.js":"17","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/reducers/userData.js":"18","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/actions/userData.js":"19","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/reducers/stockInfo.js":"20","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/actions/stockInfo.js":"21","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/Portfolio.js":"22","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/Market.js":"23","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/WatchList.js":"24","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/Plans.js":"25","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/NoStocks.js":"26","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/StockInfo.js":"27"},{"size":600,"mtime":1610921056009,"results":"28","hashOfConfig":"29"},{"size":2528,"mtime":1613448531723,"results":"30","hashOfConfig":"29"},{"size":696,"mtime":1612487299613,"results":"31","hashOfConfig":"29"},{"size":1444,"mtime":1613448535218,"results":"32","hashOfConfig":"29"},{"size":1715,"mtime":1613002211965,"results":"33","hashOfConfig":"29"},{"size":4621,"mtime":1611708723487,"results":"34","hashOfConfig":"29"},{"size":287,"mtime":1610855947670,"results":"35","hashOfConfig":"29"},{"size":13935,"mtime":1613054487742,"results":"36","hashOfConfig":"29"},{"size":3957,"mtime":1611909748140,"results":"37","hashOfConfig":"29"},{"size":674,"mtime":1611713678029,"results":"38","hashOfConfig":"29"},{"size":3395,"mtime":1612405585417,"results":"39","hashOfConfig":"29"},{"size":877,"mtime":1611714766562,"results":"40","hashOfConfig":"29"},{"size":52220,"mtime":1611908313391,"results":"41","hashOfConfig":"29"},{"size":1962,"mtime":1613448537949,"results":"42","hashOfConfig":"29"},{"size":5939,"mtime":1612652286127,"results":"43","hashOfConfig":"29"},{"size":563,"mtime":1612481714731,"results":"44","hashOfConfig":"29"},{"size":2412,"mtime":1612481724730,"results":"45","hashOfConfig":"29"},{"size":360,"mtime":1611713581710,"results":"46","hashOfConfig":"29"},{"size":4027,"mtime":1611861114162,"results":"47","hashOfConfig":"29"},{"size":856,"mtime":1612487254444,"results":"48","hashOfConfig":"29"},{"size":703,"mtime":1612490919230,"results":"49","hashOfConfig":"29"},{"size":10575,"mtime":1613266954301,"results":"50","hashOfConfig":"29"},{"size":4097,"mtime":1613448542555,"results":"51","hashOfConfig":"29"},{"size":263,"mtime":1612556554703,"results":"52","hashOfConfig":"29"},{"size":246,"mtime":1612556553031,"results":"53","hashOfConfig":"29"},{"size":1565,"mtime":1612556603220,"results":"54","hashOfConfig":"29"},{"size":165,"mtime":1613448611961,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1nvcmj4",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/index.js",[],["112","113"],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/App.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/configureStore.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/Homepage.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/NavBar.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/auth/LoginPage.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/auth/ProtectedRoute.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/auth/SignUpPage.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/SplashPage.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/reducers/auth.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/actions/auth.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/ContentCredits.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/Account.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/StockMarket.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/Banking.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/reducers/bankInfo.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/actions/bankInfo.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/reducers/userData.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/actions/userData.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/reducers/stockInfo.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/store/actions/stockInfo.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/Portfolio.js",["114"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { LineChart, Line, Tooltip, YAxis, ResponsiveContainer } from 'recharts';\n// import NoStocks from \"./NoStocks\";\n\nconst Portfolio = () => {\n    const portfolio = useSelector(state => state.stockDataReducer.portfolioData);\n    const [portfolioTotalValue, setPortfolioTotalValue] = useState(\"\");\n    const [totalValueDifference, setTotalValueDifference] = useState(\"\");\n    const [differenceStatus, setDifferenceStatus] = useState(\"\");\n    const total = window.localStorage.getItem(\"TOTAL\");\n    const token = window.localStorage.getItem(\"ESENTIAL_ACCESS_TOKEN\");\n    // const portfolioSet = window.localStorage.getItem(\"PORTFOLIO_SET\");\n    const [timeSelection, setTimeSelection] = useState(\"today\");\n    const [loading, setLoading] = useState(true);\n    const [stockCharts, setStockCharts] = useState([]);\n    // const ref = useRef([]);\n    // let stockCharts = ref.current;\n\n\n    const todaySelection = () => {\n        setTimeSelection(\"today\");\n    }\n    const weekSelection = () => {\n        setTimeSelection(\"week\");\n    }\n    const monthSelection = () => {\n        setTimeSelection(\"month\");\n    }\n    const sixMonthsSelection = () => {\n        setTimeSelection(\"6months\");\n    }\n    const yearSelection = () => {\n        setTimeSelection(\"year\");\n    }\n\n    const totalDifference = (num) => {\n        const newNum = num.toString();\n        if (!total) {\n            setTotalValueDifference(\"0\");\n            setDifferenceStatus(\"up\");\n        }\n        if (newNum > total) {\n            let newTotal = newNum - total;\n            setTotalValueDifference(newTotal);\n            setDifferenceStatus(\"up\");\n        }\n        if (newNum < total) {\n            let newTotal = total - newNum;\n            setTotalValueDifference(newTotal);\n        }\n        if (newNum === total) {\n            setTotalValueDifference(\"0\");\n            setDifferenceStatus(\"up\");\n        }\n    }\n\n    const totalValue = (portfolioData) => {\n        let portfolioValues = [];\n        let totalValue = 0;\n        portfolioData.forEach((stock) => {\n            let shares = stock.shares;\n            let pps = stock.pps;\n            let total = shares * pps;\n            portfolioValues.push(total);\n        });\n        portfolioValues.forEach((num) => {\n            totalValue += num;\n        });\n        setPortfolioTotalValue(totalValue);\n        totalDifference(totalValue);\n        window.localStorage.setItem(\"TOTAL\", totalValue);\n    }\n\n    const stockApi = async (timeFrame, nameOfStock) => {\n        const chartRequests = await fetch(`/api/stock_info/chart/${timeFrame}/${token}/${nameOfStock}`);\n        if (timeFrame === \"company\") {\n            const { CompanyInfo } = await chartRequests.json();\n            return CompanyInfo\n        }\n        const { StockChart } = await chartRequests.json();\n        return StockChart;\n    }\n\n    const individualStockData = async (portfolioArray, timeFrame) => {\n        let stockDataArray = [];\n        for (let i = 0; i < portfolioArray.length; i++) {\n            let stock = portfolioArray[i];\n            let stockName = stock.stock;\n\n            const stockChart = await stockApi(timeFrame, stockName);\n            const companyInfo = await stockApi(\"company\", stockName);\n\n            stockChart[\"company\"] = companyInfo.companyName;\n            stockChart[\"symbol\"] = companyInfo.symbol;\n            stockChart[\"purchasedPPS\"] = stock.pps;\n            stockChart[\"numShares\"] = stock.shares;\n            let lastObj = stockChart[stockChart.length - 1];\n            let currentPPS = lastObj.close;\n            stockChart[\"currentPPS\"] = currentPPS;\n            stockChart[\"totalValue\"] = stockChart.purchasedPPS * stockChart.numShares;\n            stockChart[\"difference\"] = stockChart.numShares * stockChart.currentPPS;\n            stockDataArray.push(stockChart);\n        }\n        // debugger;\n        return stockDataArray;\n        // console.log(stockCharts);\n    }\n\n    const numberFormat = (num) => {\n        let roundedNum = Math.round(num);\n        let formattedNum = roundedNum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return formattedNum;\n    }\n\n    useEffect(() => {\n        const stockFunction = async () => {\n            if (loading === true) {\n                totalValue(portfolio);\n                const stockData = await individualStockData(portfolio, timeSelection);\n                console.log(stockData);\n                setStockCharts(stockData);\n                setLoading(false);\n            }\n        }\n        stockFunction();\n    }, []);\n\n\n    const greenArrow = (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"33\" height=\"33\" fill=\"rgb(0, 200, 5)\" className=\"bi bi-caret-up-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M7.247 4.86l-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\"/>\n        </svg>\n    );\n    const redArrow = (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"33\" height=\"33\" fill=\"currentColor\" className=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\n        </svg>\n    );\n    const loadingWheel = (\n        <div id=\"loader\">\n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n        </div>\n    );\n\n    // const testData = [{name: \"Elijah\", high: 1000, low: 900}, {name: \"Hubbard\", high: 800, low: 700}, {name: \"Shamar\", high: 600, low: 500}, {name: \"Test\", high: 400, low: 300}];\n\n    return (\n        <>\n        <div className=\"stockContent__div\">\n            <div className=\"portfolio__totalValue-container\">\n                <div className=\"totalValue__div\">\n                    {portfolio && portfolioTotalValue ? <div className=\"totalValue\">Portfolio Value • <span style={{ fontWeigth: \"400\" }}>${portfolioTotalValue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span></div> : <></>}\n                    <div className=\"differenceInValue__div\">\n                        <div style={{ paddingTop: \"5px\" }}>\n                            {portfolio && differenceStatus === \"up\" ? greenArrow : redArrow}\n                        </div>\n                        {portfolio && totalValueDifference ? <div className=\"differenceNumber\">${totalValueDifference.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div> : <></>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"totalValue__bottomBorder\"></div>\n            <div className=\"stockChart\">\n                {loading === false ? stockCharts.map((chart) => (\n                    <>\n                    <div key={chart.company} className=\"individualStocks__portfolio\">\n                        <div className=\"stockChart__div\">\n                            <div className=\"stockName__portfolio\">{chart.company}</div>\n                            <ResponsiveContainer height=\"78%\">\n                                <LineChart data={chart} margin={{top:25, bottom: 25}}>\n                                    <Line type=\"linear\" dataKey=\"close\" stroke=\"#00c805\" dot={false} strokeWidth={2} isAnimationActive={true} />\n                                    <YAxis hide={true} domain={[dataMin => (Math.round(dataMin)), dataMax => (Math.round(dataMax))]} />\n                                    <Tooltip isAnimationActive={false} offset={-40} position={{ y: -40 }} />\n                                </LineChart>\n                            </ResponsiveContainer>\n                            <div className=\"stockChart__timeFrame\">\n                                {timeSelection === \"today\" ? <div style={{ marginLeft: \"0px\" }} className=\"timeFrames selected__timeFrame\">1D</div> : <div onClick={todaySelection} style={{ marginLeft: \"0px\" }} id=\"timeFrame__today\" className=\"timeFrames\">1D</div>}\n                                {timeSelection === \"week\" ? <div className=\"timeFrames selected__timeFrame\">1W</div> : <div onClick={weekSelection} id=\"timeFrame__week\" className=\"timeFrames\">1W</div>}\n                                {timeSelection === \"month\" ? <div className=\"timeFrames selected__timeFrame\">1M</div> : <div onClick={monthSelection} id=\"timeFrame__month\" className=\"timeFrames\">1M</div>}\n                                {timeSelection === \"6months\" ? <div className=\"timeFrames selected__timeFrame\">6M</div> : <div onClick={sixMonthsSelection} id=\"timeFrame__6months\" className=\"timeFrames\">6M</div>}\n                                {timeSelection === \"year\" ? <div className=\"timeFrames selected__timeFrame\">1Y</div> : <div onClick={yearSelection} id=\"timeFrame__year\" className=\"timeFrames\">1Y</div>}\n                            </div>\n                        </div>\n                        <div className=\"stockInfo__portfolio-div\">\n                            <div className=\"stockInfo__name\">\n                                <span>{chart.symbol}</span>\n                                <span>${numberFormat(chart.currentPPS)}</span>\n                            </div>\n                            <div className=\"stockInfo__shares-div\">\n                                <div className=\"totalValue__portfolio\">\n                                    <span>Total Value</span>\n                                    <span>${numberFormat(chart.totalValue)}</span>\n                                </div>\n                                <div className=\"yourShares\">\n                                    <span>{chart.numShares} Shares</span>\n                                    <span>@${numberFormat(chart.purchasedPPS)}/share</span>\n                                </div>\n                                <div className=\"totalDifference__portfolio\">\n                                    {chart.difference > chart.totalValue ? <span className=\"profit__difference\">+ ${numberFormat(chart.difference)}</span> : <span className=\"lost__difference\">- ${numberFormat(chart.difference)}</span>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ height: \"10%\", backgroundColor: \"white\" }}></div>\n                    </>\n                )) : loadingWheel}\n            </div>\n        </div>\n        </>\n    )\n}\n\n// For reference\n// {portfolioSet === \"true\" ? <div className=\"inner__mainDiv\">\n//     TEST\n// </div> : noStocks}\n\n/* <NoStocks tab=\"portfolio\" /> */\n\nexport default Portfolio;","/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/Market.js",["115"],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/WatchList.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/Plans.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/NoStocks.js",[],"/Users/elijahhubbard/Desktop/E-sential-Project/frontend/src/components/menu/market/StockInfo.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":127,"column":8,"nodeType":"122","endLine":127,"endColumn":10,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":2,"column":21,"nodeType":"126","messageId":"127","endLine":2,"endColumn":31},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'individualStockData', 'loading', 'portfolio', 'timeSelection', and 'totalValue'. Either include them or remove the dependency array.","ArrayExpression",["130"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [individualStockData, loading, portfolio, timeSelection, totalValue]",{"range":"133","text":"134"},[4615,4617],"[individualStockData, loading, portfolio, timeSelection, totalValue]"]